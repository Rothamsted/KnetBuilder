<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<description><![CDATA[ONDEX OWL Parser configuration for importing the Plant Trait Ontology (https://github.com/Planteome/plant-trait-ontology).]]></description>

	<import resource="default_mappings.xml" />


	<!-- This is the entry point, it starts from top OWL classes and recurse on rdfs:subClasOf -->		
	<bean id = "owlMapper" class = "net.sourceforge.ondex.parser.owl.OWLInfMapper">
	  <!-- The recursive subClassOf mapper with one instance per top class -->
	  <property name = "relationsMappers">
	  	<set>
	  		<!-- This will follow the hierarchy of terms. -->
				<bean parent = "subClassMapper">
					<property name="topClassesProvider">
						<bean class = "net.sourceforge.ondex.parser.owl.IriBasedTopClassesProvider">
							<!-- It will start from this class (bio-process) -->
							<property name="topClassIri" value = "#{ns.iri ( 'obo:TO_0000387' )}" /><!-- Plant Trait -->
						</bean>
					</property>
					<!-- The root class above will be mapped to a concept, we use a generic 'TO' as a concept class -->
					<property name="doMapRootsToConcepts" value = "true" />
					<property name="conceptClassMapper" ref = "conceptClassMapper" />
				</bean> 		
	  	</set>
	  </property>
	</bean>
		
		
	<bean id = "descriptionMapper" class = "net.sourceforge.ondex.parser.owl.TextPropertyMapper" >
		<property name="propertyIri" value="#{ns.iri ( 'obo:IAO_0000115' )}" /><!-- definition -->
	</bean>
	
	<!-- Mapper for the single concept -->
	<bean id = "conceptMapper" class = "net.sourceforge.ondex.parser.owl.OWLConceptMapper" scope = "prototype">
		<property name = "idMapper" ref = "idMapper" />
		<property name = "preferredNameMapper" ref = "labelMapper" />
		<property name = "descriptionMapper" ref = "descriptionMapper" />
		<property name = "additionalNameMappers">
			<set>
				<!-- Synonyms -->
				<bean id = "synonymNameMapper" class = "net.sourceforge.ondex.parser.owl.OWLNamesMapper">
					<property name="propertyIri" value="#{ns.iri ( 'oboInOwl:hasExactSynonym' )}" />
				</bean>
			</set>
		</property>
		<!-- Accessions -->
		<property name = "accessionsMappers">
			<set>
				<bean id = "idAccMapper" class = "net.sourceforge.ondex.parser.owl.OWLAccessionsMapper">
					<property name="propertyIri" value="#{ns.iri ( 'oboInOwl:id' )}" />
					<property name="dataSourcePrototype" ref = "toDataSource" />
					<property name="dataSourcePrefix" value = "TO:" />
				</bean>	
				<bean id = "altIdAccMapper" class = "net.sourceforge.ondex.parser.owl.OWLAccessionsMapper">
					<property name="propertyIri" value="#{ns.iri ( 'oboInOwl:hasAlternativeId' )}" />
					<property name="dataSourcePrototype" ref = "toDataSource" />
					<property name="dataSourcePrefix" value = "TO:" />
				</bean>	
				
				<!-- These are declared via owl:Axiom instances, so we need its special mapper -->
				<bean id = "wpAccMapper" class = "net.sourceforge.ondex.parser.owl.OWLAccsMapperFromAxiom">
					<property name="propertyIri" value="#{ns.iri ( 'obo:IAO_0000115' )}" /> <!-- definition -->
					<property name="mappedPropertyIri" value="#{ns.iri ( 'oboInOwl:hasDbXref' )}" />
					<property name="dataSourcePrefix" value="Wikipedia:" />
					<property name="dataSourcePrototype">
						<bean id = "wpDs" class = "net.sourceforge.ondex.core.utils.DataSourcePrototype">
							<property name="id" value = "Wikipedia" />
							<property name="fullname" value = "Wikipedia" />
						</bean>
					</property>
				</bean>
				<bean id = "ecAccMapper" class = "net.sourceforge.ondex.parser.owl.OWLAccsMapperFromAxiom">
					<property name="propertyIri" value="#{ns.iri ( 'oboInOwl:hasDbXref' )}" />
					<property name="dataSourcePrefix" value="EC:" />
					<property name="dataSourcePrototype">
						<bean id = "ecDs" class = "net.sourceforge.ondex.core.utils.DataSourcePrototype">
							<property name="id" value = "EC" />
							<property name="fullname" value = "Enzyme Nomenclature Database" />
							<property name="description" value = "ENZYME is a repository of information relative to the nomenclature of enzymes (http://enzyme.expasy.org)." />
						</bean>
					</property>
				</bean>
			</set>
		</property>
		<!-- Additional relations that are not followed recursively -->
		<property name = "conceptRelationMappers">
			<set>
				<bean id = "equivClassMapper" class = "net.sourceforge.ondex.parser.owl.OWLEqIntersctRel" >
					<property name="evidenceTypePrototype" ref = "evidenceTypePrototype" />
				</bean>
				<!-- part of -->
				<bean id = "partOfMapper" class = "net.sourceforge.ondex.parser.owl.OWLSomeRelMapper">
					<property name="propertyIri" value="#{ns.iri ( 'obo:BFO_0000050' )}" />
					<property name="relationTypePrototype" ref = "partOfRelPrototype" />
					<property name="evidenceTypePrototype" ref = "evidenceTypePrototype" />
				</bean>
			</set>
		</property>
	</bean>
	
	<!-- This maps an OWL root class to a concept class, using OWL information -->
	<!-- bean id = "conceptClassMapper" class = "net.sourceforge.ondex.parser.owl.OWLClassCCMapper" scope = "prototype">
		<property name = "idMapper" ref = "idMapper" />
		<property name = "labelMapper" ref = "labelMapper" />
		<property name = "descriptionMapper" ref = "descriptionMapper" />
	</bean -->

	<!-- This instead creates a fixed CC, with constant attributes of your choice  -->
	<bean id = "conceptClassMapper" class = "net.sourceforge.ondex.parser.owl.OWLConstCCMapper">
		<property name="value">
			<bean class = "net.sourceforge.ondex.core.utils.ConceptClassPrototype">
				<property name = "id" value="TO" />
				<property name = "fullName" value="Trait Ontology Term" />
				<property name= "description" value="Term from the Trait Ontology (https://github.com/Planteome/plant-trait-ontology)" />
			</bean>
		</property>
	</bean>


	<!-- Several ONDEX relation types, used in the components above -->

	<!-- part-of -->
	<bean id = "partOfRelPrototype" class = "net.sourceforge.ondex.core.utils.RelationTypePrototype">
		<property name="id" value = "part_of" />
		<property name="fullname" value = "part of" />
		<property name="antisymmetric" value = "true" />
		<property name="transitiv" value = "true" />
	</bean>
	
	
	<!-- Data source that represents Gene Ontology itself and used on several components -->
	<bean id = "toDataSource" class = "net.sourceforge.ondex.core.utils.DataSourcePrototype">
		<property name="id" value = "TO" />
		<property name="fullname" value = "Plant Trait Ontology" />
	</bean> 
	
	<bean id = "jenaOntModel" class = "org.apache.jena.rdf.model.ModelFactory" 
		scope = "prototype"
		factory-method="createOntologyModel">
		<constructor-arg value="#{T( org.apache.jena.ontology.OntModelSpec ).OWL_MEM }"></constructor-arg>
	</bean>
	
</beans>
