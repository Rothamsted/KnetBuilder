<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<description><![CDATA[Tests a comphreensive mapping for GO]]></description>

	<import resource="default_mappings.xml" />


	<!-- 
	  This is the entry point, it starts from top OWL classes and recurse on rdfs:subClasOf and other OWL relations like
	  someValuesFrom 
	-->		
	<bean id = "owlMapper" parent = "defaultOwlMapper">

		<!-- The top classes to start from -->

		<property name = "rootsScanner">
			<bean class = "net.sourceforge.ondex.parser2.CompositeScanner">
				<property name = "scanners">
					<set>
						<bean class = "net.sourceforge.ondex.parser.owl.IriBasedRootsScanner">
							<property name = "topClassIri" value = "#{ns.iri ( 'obo:GO_0008150' )}" /><!-- BioProcess -->
						</bean>
						<bean class = "net.sourceforge.ondex.parser.owl.IriBasedRootsScanner">
							<property name = "topClassIri" value = "#{ns.iri ( 'obo:GO_0003674' )}" /><!-- MolFunction -->
						</bean>
						<bean class = "net.sourceforge.ondex.parser.owl.IriBasedRootsScanner">
							<property name = "topClassIri" value = "#{ns.iri ( 'obo:GO_0005575' )}" /><!-- CellComp -->
						</bean>
					</set>					
				</property>
			</bean>
		</property>
		
		<!-- The top OWL class maps to an ONDEX concept class and not to a concpet -->
		<property name = "doMapRootsToConcepts" value = "false" />
		
		<!-- The OWL class relations to follow -->
		
		<property name = "linkers">
			<!-- These will be added to the existing is-a linker (in default-mappings.xml) -->
			<list merge = "true">
			  
			  <!-- Follows intersections of classes of which the starting class is declared equivalent to  -->
				<bean class = "net.sourceforge.ondex.parser2.ExploringMapper.LinkerConfiguration">
					<property name = "scanner">
						<bean class = "net.sourceforge.ondex.parser.owl.OWLEqIntersctScanner" />
					</property>
					<property name = "mapper" ref = "isaMapper" />
				</bean>
				
				<!-- Follows owl:someValuesFrom relations -->
				
				<bean class = "net.sourceforge.ondex.parser2.ExploringMapper.LinkerConfiguration">
					<property name = "scanner">
						<bean class = "net.sourceforge.ondex.parser.owl.OWLSomeScanner">
							<property name="propertyIri" value="#{ns.iri ( 'obo:BFO_0000050' )}" /><!-- part of -->
						</bean>
					</property>
					<property name = "mapper" ref = "partOfMapper" />
				</bean>

				<bean class = "net.sourceforge.ondex.parser2.ExploringMapper.LinkerConfiguration">
					<property name = "scanner">
						<bean class = "net.sourceforge.ondex.parser.owl.OWLSomeScanner">
							<property name="propertyIri" value="#{ns.iri ( 'obo:RO_0002211' )}" /><!-- regulates -->
						</bean>
					</property>
					<property name = "mapper" ref = "regulatesMapper" />
				</bean>

				<bean class = "net.sourceforge.ondex.parser2.ExploringMapper.LinkerConfiguration">
					<property name = "scanner">
						<bean class = "net.sourceforge.ondex.parser.owl.OWLSomeScanner">
							<property name="propertyIri" value="#{ns.iri ( 'obo:RO_0002213' )}" /><!-- pos regulates -->
						</bean>
					</property>
					<property name = "mapper" ref = "posRegMapper" />
				</bean>

				<bean class = "net.sourceforge.ondex.parser2.ExploringMapper.LinkerConfiguration">
					<property name = "scanner">
						<bean class = "net.sourceforge.ondex.parser.owl.OWLSomeScanner">
							<property name="propertyIri" value="#{ns.iri ( 'obo:RO_0002212' )}" /><!-- neg regulates -->
						</bean>
					</property>
					<property name = "mapper" ref = "negRegMapper" />
				</bean>
				
			</list>

		</property> <!-- /linkers -->
		
	</bean> <!-- /owlMapper -->


	<bean id = "descriptionMapper" class = "net.sourceforge.ondex.parser.owl.OWLTextMapper">
		<property name="propertyIri" value = "#{ns.iri ( 'obo:IAO_0000115' )}" /><!-- definition -->
	</bean>


	<bean id = "conceptMapper" class = "net.sourceforge.ondex.parser2.DefaultConceptMapper">
	  <property name = "idMapper" ref = "idMapper" />
	  <property name = "descriptionMapper" ref = "descriptionMapper" />	  
	  <property name = "preferredNameMapper" ref = "nameMapper" />
	  <property name = "accessionsMapper" ref = "accessionsMapper" />
	  <property name = "dataSourceMapper" ref = "dataSourceMapper" />
	  <property name = "altNamesMapper">
	  	<bean class = "net.sourceforge.ondex.parser.owl.OWLTextsMapper">
				<property name="propertyIri" value="#{ns.iri ( 'oboInOwl:hasExactSynonym' )}" />
	  	</bean>
	  </property>
	</bean> <!-- /conceptMapper -->


	<bean id = "accessionsMapper" class = "net.sourceforge.ondex.parser2.CompositeAccessionsMapper">
		<property name = "mappers">
			<set>
				<bean class = "net.sourceforge.ondex.parser.owl.OBOWLAccessionsMapper">
					<property name = "propertyIri" value = "#{ns.iri ( 'oboInOwl:id' )}" />
					<property name = "dataSourcePrefix" value="GO:" />
					<property name = "dataSourcesMapper" ref = "goDataSourcesMapper" />
				</bean>
				<bean class = "net.sourceforge.ondex.parser.owl.OBOWLAccessionsMapper">
					<property name = "propertyIri" value = "#{ns.iri ( 'oboInOwl:hasAlternativeId' )}" />
					<property name = "dataSourcePrefix" value="GO:" />
					<property name = "dataSourcesMapper" ref = "goDataSourcesMapper" />
				</bean>
				<bean class = "net.sourceforge.ondex.parser.owl.OBOWLAccessionsMapper">
					<property name = "propertyIri" value = "#{ns.iri ( 'oboInOwl:hasDbXref' )}" />
					<property name = "dataSourcePrefix" value="Wikipedia:" />
					<property name = "dataSourcesMapper">
						<bean class = "net.sourceforge.ondex.parser2.ConstDataSourcesMapper">
							<property name="value">
								<bean class = "net.sourceforge.ondex.core.utils.DataSourcePrototype">
									<property name="id" value = "Wikipedia" />
									<property name="fullName" value = "Wikipedia" />
								</bean>
							</property>
						</bean>	
					</property>
				</bean>
				<bean class = "net.sourceforge.ondex.parser.owl.OBOWLAccessionsMapper">
					<property name = "propertyIri" value = "#{ns.iri ( 'oboInOwl:hasDbXref' )}" />
					<property name = "dataSourcePrefix" value="EC:" />
					<property name = "dataSourcesMapper">
						<bean class = "net.sourceforge.ondex.parser2.ConstDataSourcesMapper">
							<property name="value">
								<bean class = "net.sourceforge.ondex.core.utils.DataSourcePrototype">
									<property name="id" value = "EC" />
									<property name="fullName" value = "Enzyme Nomenclature Database" />
									<property name="description" value = "ENZYME is a repository of information relative to the nomenclature of enzymes (http://enzyme.expasy.org)." />
								</bean>								
							</property>
						</bean>	
					</property>
				</bean>				
			</set>
		</property>
	</bean> <!-- /accessionsMapper -->



	<!-- OBO/OWL class relations -->

	<bean id = "partOfMapper" class = "net.sourceforge.ondex.parser2.SimpleRelationMapper">
		<property name ="relationTypePrototype">
			<bean class = "net.sourceforge.ondex.core.utils.RelationTypePrototype">
				<property name="id" value = "part_of" />
				<property name="fullName" value = "part of" />
				<property name="antisymmetric" value = "true" />
				<property name="transitive" value = "true" />
			</bean>
		</property> 
	</bean>

	<bean id = "regulatesMapper" class = "net.sourceforge.ondex.parser2.SimpleRelationMapper">
		<property name ="relationTypePrototype">
			<bean id = "regulatesRelPrototype" class = "net.sourceforge.ondex.core.utils.RelationTypePrototype">
				<property name="id" value = "regulates" />
				<property name="fullName" value = "regulates" />
				<property name="antisymmetric" value = "true" />
				<property name="transitive" value = "true" />
			</bean>
		</property> 
	</bean>

	<bean id = "posRegMapper" class = "net.sourceforge.ondex.parser2.SimpleRelationMapper">
		<property name ="relationTypePrototype">
			<bean class = "net.sourceforge.ondex.core.utils.RelationTypePrototype">
				<property name="id" value = "pos_reg" />
				<property name="fullName" value = "positively regulates" />
				<property name="antisymmetric" value = "true" />
				<property name="transitive" value = "true" />
				<property name="parentPrototype" value = "#{ regulatesMapper.relationTypePrototype }" />
			</bean>			
		</property> 
	</bean>
	
	<bean id = "negRegMapper" class = "net.sourceforge.ondex.parser2.SimpleRelationMapper">
		<property name ="relationTypePrototype">
			<bean class = "net.sourceforge.ondex.core.utils.RelationTypePrototype">
				<property name="id" value = "neg_reg" />
				<property name="fullName" value = "negatively regulates" />
				<property name="antisymmetric" value = "true" />
				<property name="transitive" value = "true" />
				<property name="parentPrototype" value = "#{ regulatesMapper.relationTypePrototype }" />
			</bean>			
		</property> 
	</bean>


	<bean id = "goDataSourcesMapper" class = "net.sourceforge.ondex.parser2.ConstDataSourcesMapper">
		<property name="value">
			<bean class = "net.sourceforge.ondex.core.utils.DataSourcePrototype">
				<property name="id" value = "GO" />
				<property name="fullName" value = "Gene Ontology" />
			</bean>
		</property>
	</bean>	
	
</beans>
	