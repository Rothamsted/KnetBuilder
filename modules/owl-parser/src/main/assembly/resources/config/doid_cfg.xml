<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<description><![CDATA[ONDEX OWL Parser configuration for importing Disease Ontology (http://disease-ontology.org/downloads/)]]></description>

	<import resource="default_mappings.xml" />


	<!-- This is the entry point, it starts from top OWL classes and recurse on rdfs:subClasOf -->		
	<bean id = "owlMapper" class = "net.sourceforge.ondex.parser.owl.OWLMapper">
	  <!-- The recursive subClassOf mapper with one instance per top class -->
	  <property name = "relationsMappers">
	  	<set>
	  		<bean parent = "subClassMapper">
	  			<property name="conceptClassMapper" ref="conceptClassMapper" />
	  			<property name="topClassesProvider">
	  			  <bean class = "net.sourceforge.ondex.parser.owl.OwlRootClassesProvider" />
	  			</property>
	  		</bean>
	  	</set>
	  </property>
	</bean>
		
		
	<bean id = "descriptionMapper" class = "net.sourceforge.ondex.parser.owl.TextPropertyMapper" >
		<property name="propertyIri" value="#{ns.iri ( 'obo:IAO_0000115' )}" /><!-- definition -->
	</bean>
	
	<!-- Mapper for the single concept -->
	<bean id = "conceptMapper" class = "net.sourceforge.ondex.parser.owl.OWLConceptMapper" scope = "prototype">
		<!-- This way it's initialised by its container, dynamically -->
		<property name = "conceptClassMapper" value = "#{ null }" />
		<property name = "idMapper" ref = "idMapper" />
		<property name = "preferredNameMapper" ref = "labelMapper" />
		<property name = "descriptionMapper" ref = "descriptionMapper" />
		<property name = "additionalNameMappers">
			<set>
				<!-- Synonyms -->
				<bean id = "synonymNameMapper" class = "net.sourceforge.ondex.parser.owl.OWLNamesMapper">
					<property name="propertyIri" value="#{ns.iri ( 'oboInOwl:hasExactSynonym' )}" />
				</bean>
			</set>
		</property>
		<!-- Accessions -->
		<property name = "accessionsMappers">
			<set>
				<bean id = "idAccMapper" class = "net.sourceforge.ondex.parser.owl.OWLAccessionsMapper">
					<property name="propertyIri" value="#{ns.iri ( 'oboInOwl:id' )}" />
					<property name="dataSourcePrototype" ref = "doidDataSource" />
					<property name="dataSourcePrefix" value = "DOID:" />
				</bean>	
				<bean id = "altIdAccMapper" class = "net.sourceforge.ondex.parser.owl.OWLAccessionsMapper">
					<property name="propertyIri" value="#{ns.iri ( 'oboInOwl:hasAlternativeId' )}" />
					<property name="dataSourcePrototype" ref = "doidDataSource" />
					<property name="dataSourcePrefix" value = "DOID:" />
				</bean>	
				<!-- Any additional external ref is mapped this way in OBO -->
				<bean id = "wpAccMapper" class = "net.sourceforge.ondex.parser.owl.OWLAccessionsMapper">
					<property name="propertyIri" value="#{ns.iri ( 'oboInOwl:hasDbXref' )}" />
					<property name="dataSourcePrefix" value="url:http://en.wikipedia.org/wiki/" />
					<property name="dataSourcePrototype">
						<bean id = "wpDs" class = "net.sourceforge.ondex.core.utils.DataSourcePrototype">
							<property name="id" value = "Wikipedia" />
							<property name="fullname" value = "Wikipedia" />
						</bean>
					</property>
				</bean>
				<bean id = "pmedMapper" class = "net.sourceforge.ondex.parser.owl.OWLAccessionsMapper">
					<property name="propertyIri" value="#{ns.iri ( 'oboInOwl:hasDbXref' )}" />
					<property name="dataSourcePrefix" value="url:http://www.ncbi.nlm.nih.gov/pubmed/" />
					<property name="dataSourcePrototype">
						<bean id = "pmedDs" class = "net.sourceforge.ondex.core.utils.DataSourcePrototype">
							<property name="id" value = "PUBMED" />
							<property name="fullname" value = "PUBMED Medical Literature Index" />
							<property name="description" value = "" />
						</bean>
					</property>
				</bean>
			</set>
		</property>
		<!-- Additional relations that are not followed recursively -->
		<property name = "conceptRelationMappers">
			<set>
				<bean id = "equivClassMapper" class = "net.sourceforge.ondex.parser.owl.OWLEqIntersctRel" >
					<property name="evidenceTypePrototype" ref = "evidenceTypePrototype" />
				</bean>
				<!-- has material basis -->
				<bean id = "matBasisMapper" class = "net.sourceforge.ondex.parser.owl.OWLSomeRelMapper">
					<property name="propertyIri" value="#{ns.iri ( 'obo:IDO_0000664' )}" />
					<property name="relationTypePrototype" ref = "matBasisRelPrototype" />
					<property name="evidenceTypePrototype" ref = "evidenceTypePrototype" />
				</bean>
			</set>
		</property>
	</bean>
	
	<!-- We use a constant CC, since there are multiple root classes -->
	<bean id = "conceptClassMapper" class = "net.sourceforge.ondex.parser.owl.OWLConstCCMapper" scope = "singleton">
		<property name="value">
			<bean class = "net.sourceforge.ondex.core.utils.ConceptClassPrototype">
				<property name = "id" value="DOID_TERM" />
				<property name = "fullName" value="DOID Term" />
				<property name= "description" value="Term from the Disease Ontology (http://disease-ontology.org)" />
			</bean>
		</property>
	</bean>


	<!-- Several ONDEX relation types, used in the components above -->

	<!-- part-of -->
	<bean id = "matBasisRelPrototype" class = "net.sourceforge.ondex.core.utils.RelationTypePrototype">
		<property name="id" value = "material_basis_in" />
		<property name="fullname" value = "has material basis in" />
		<property name="antisymmetric" value = "true" />
		<property name="transitiv" value = "false" />
	</bean>
		
	<!-- Data source that represents DOID itself and used on several components -->
	<bean id = "doidDataSource" class = "net.sourceforge.ondex.core.utils.DataSourcePrototype">
		<property name="id" value = "DOI" />
		<property name="fullname" value = "Disease Ontology (http://disease-ontology.org)" />
	</bean> 
	
</beans>
	