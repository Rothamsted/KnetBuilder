<#include "graph_header.ftlx">
<#include "utils.ftlx">
<#-- 

  Reports XML for property natures, e.g., symmetric, transitive  

-->
<#macro prop_nature js_natures>
  <#-- Normalize to array -->
  <#local natures = js_natures>
  <#if natures?is_string>
  	<#local natures = [ natures ]>
  </#if>
	<#local nature_map = { 
	  'isReflexive': 'owl:ReflexiveProperty',
	  'isAntisymmetric': 'owl:AsymmetricProperty', 
	  'isSymmetric': 'owl:SymmetricProperty', 
	  'isTransitive': 'owl:TransitiveProperty'}
	>	  
	<#list nature_map as xml, rdf>
	  		<${xml}>${( natures?seq_contains( rdf  ) )?c}</${xml}>
	</#list>  
</#macro>
<#--  

  
  Common property descriptors, which are used both for a proprty and its parent
  
-->
<#macro common_descriptors rel_type>
				<@render_metadata rel_type />
				<inverseName>${(rel_type._inverseId)!'none'}</inverseName>
				<@prop_nature (rel_type._nature)![] />
</#macro>
<#-- 


										------------------------------------------ MAIN ------------------------------------------ 

-->
<#global parent_props = JsonUtils.indexJsonLdTypes ( js, "_OxlParentProperty" ) />
<#list js as rel_type> 
  <#if !to_seq ( rel_type [ '@type' ] )?seq_contains ( '_OxlProperty' )><#continue /></#if>
			<relation_type>
			  <@common_descriptors rel_type />
				<#-- Parent -->
				<specialisationOf><idRef>${rel_type._parentId}</idRef></specialisationOf>
			</relation_type>
</#list>